// 0: empty, 2: cell
int[][] board = new int[100][100];
int[][] boardcopy = new int[100][100];

void god()
{
  for (int i = 0; i < board.length; i++) {
    for (int j = 0; j < board.length; j++) {
      boardcopy[i][j] = board[i][j];
    }
  }
  for (int i = 0; i < board.length; i++) {
    for (int j = 0; j < board.length; j++) {
      int counter = 0;
      if ((i != 0) && (j !=0) && (i != 99) && (j != 99)) {
        // counting the number of alive cells around the cell
        if (board[i-1][j] == 1) {
          counter++;
        }
        if (board[i+1][j] == 1) {
          counter++;
        }
        if (board[i-1][j-1] == 1) {
          counter++;
        }
        if (board[i][j-1] == 1) {
          counter++;
        }
        if (board[i+1][j-1] == 1) {
          counter++;
        }
        if (board[i-1][j+1] == 1) {
          counter++;
        }
        if (board[i][j+1] == 1) {
          counter++;
        }
        if (board[i+1][j+1] == 1) {
          counter++;
        }
      }
      //Running through the rules
      if ((counter < 2) && (board[i][j] == 1)) {
        boardcopy[i][j] = 0;
      }
      if ((counter > 3) && (board[i][j] == 1)) {
        boardcopy[i][j] = 0;
      }
      if ((counter == 3) && (board[i][j] == 0)) {
        boardcopy[i][j] = 1;
      }
    }
  }
  for (int i = 0; i < 100; i++) {
    for (int j = 0; j < 100; j++) {
      board[i][j] = boardcopy[i][j];
    }
  }
}

void setup()
{
    size(1000,1000);
    background(255);
    for(int i = 0; i < 100; i++) // Sets the whole board to 0
    {
        for(int j = 0; j < 100; j++)
        {
            board[i][j] = 0;
        }
    }
    //board[50][50] = 1; // THis is setting one thing to be alive
    //board[49][50] = 1;
    //board[51][50] = 1;
    //board[51][49] = 1;
    //board[50][48] = 1;
    
    board[1][7] = 1;
    board[1][8] = 1;
    board[2][7] = 1;
    board[2][8] = 1;
    
    board[9][8] = 1;
    board[9][9] = 1;
    board[10][7] = 1;
    board[10][9] = 1;
    board[11][7] = 1;
    board[11][8] = 1;
    
    board[17][9] = 1;
    board[17][10] = 1;
    board[17][11] = 1;
    board[18][9] = 1;
    board[19][10] = 1;
    
    board[23][6] = 1;
    board[23][7] = 1;
    board[24][5] = 1;
    board[24][7] = 1;
    board[25][5] = 1;
    board[25][6] = 1;
    
    board[25][17] = 1;
    board[25][18] = 1;
    board[26][17] = 1;
    board[26][19] = 1;
    board[27][17] = 1;
    
    board[35][5] = 1;
    board[35][6] = 1;
    board[36][5] = 1;
    board[36][6] = 1;
    
    board[36][12] = 1;
    board[36][13] = 1;
    board[36][14] = 1;
    board[37][12] = 1;
    board[38][13] = 1;
}

void draw()
{
    delay(60); // Just waits a second
    background(255);
    for(int i = 0; i < 100; i++) // Goes through the 2d matrix and draws the cell if it is alive
    {
        for(int j = 0; j < 100; j++)
        {
            if(board[i][j] == 1) // 1 means that it is alive
            {
                stroke(0, 255, 0);
                fill(0, 255, 0);
                rect(i*10, j*10, 10, 10); // Multiplies the index by 10 because each one is a 10 by 10 pixel
            }
        }
    }
    god();
}
